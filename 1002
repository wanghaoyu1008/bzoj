//f[i]=f[i-1]+2*f[i-2]+3*f[i-3]+...+(i-1)*f[1]+i^2,f[0]=1,f[1]=1
//f[i]=3*f[i-1]-f[i-2]+2,f[0]=1,f[1]=1
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int L=51;

struct bigint{
	int l,m[L];
	bigint(){l=0;memset(m,0,sizeof(m));}
	void init(){l=0;memset(m,0,sizeof(m));}
	void operator =(bigint x){
		l=x.l;memcpy(m,x.m,sizeof(m));
	}
	void operator +=(bigint x){
		int i;
		l=max(l,x.l);
		for(i=1;i<=l;i++)m[i]+=x.m[i];
		for(i=1;i<=l;i++)if(m[i]>9){m[i]-=10;m[i+1]+=1;}
		if(m[l+1])++l;
	}
	void operator -=(bigint x){			//the answer is a positive number
		int i;
		for(i=1;i<=l;i++)m[i]-=x.m[i];
		for(i=1;i<=l;i++)if(m[i]<0){m[i]+=10;m[i+1]-=1;}
		while(!m[l])--l;
	}
	void operator *=(int x){
		int i;
		for(i=1;i<=l;i++)m[i]*=x;
		for(i=1;i<=l;i++){m[i+1]+=m[i]/10;m[i]%=10;}
		while(m[l+1]){++l;m[l+1]=m[l]/10;m[l]%=10;}
	}
	void operator ++(){
		++m[1];
		for(int i=1;i<=l;i++)
			if(m[i]>9){m[i]-=10;m[i+1]+=1;}
			else break;
		if(m[l+1])++l;
	}
	void write(){
		for(int i=l;i>=1;i--)
			printf("%d",m[i]);
		printf("\n");
	}
}x,y,z;

int main()
{
	int n,i;
	scanf("%d",&n);
	if(n==0||n==1){
		printf("1");
		return 0;
	}
	if(n==2){
		printf("5");
		return 0;
	}
	x.init();++x;
	y.init();++y;++y;++y;++y;++y;
	for(i=3;i<=n;i++){
		z.init();
		z=y;z*=3;z-=x;++z;++z;
		x=y;y=z;
	}
	z.write();
	return 0;
}
